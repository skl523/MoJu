{"remainingRequest":"D:\\huyu\\tz\\组局系统\\me-pc\\node_modules\\babel-loader\\lib\\index.js!D:\\huyu\\tz\\组局系统\\me-pc\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\huyu\\tz\\组局系统\\me-pc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\huyu\\tz\\组局系统\\me-pc\\src\\components\\ThemePicker\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\huyu\\tz\\组局系统\\me-pc\\src\\components\\ThemePicker\\index.vue","mtime":1631243185000},{"path":"D:\\huyu\\tz\\组局系统\\me-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654707740660},{"path":"D:\\huyu\\tz\\组局系统\\me-pc\\node_modules\\babel-loader\\lib\\index.js","mtime":1654707742649},{"path":"D:\\huyu\\tz\\组局系统\\me-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654707740660},{"path":"D:\\huyu\\tz\\组局系统\\me-pc\\node_modules\\vue-loader\\lib\\index.js","mtime":1654707743068}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-color-picker\r\n    v-model=\"theme\"\r\n    :predefine=\"['#409EFF', '#1890ff', '#304156','#212121','#11a983', '#13c2c2', '#6959CD', '#f5222d', ]\"\r\n    class=\"theme-picker\"\r\n    popper-class=\"theme-picker-dropdown\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nconst version = require('element-ui/package.json').version // element-ui version from node_modules\r\nconst ORIGINAL_THEME = '#409EFF' // default color\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      chalk: '', // content of theme-chalk css\r\n      theme: ''\r\n    }\r\n  },\r\n  computed: {\r\n    defaultTheme() {\r\n      return this.$store.state.settings.theme\r\n    }\r\n  },\r\n  watch: {\r\n    defaultTheme: {\r\n      handler: function(val, oldVal) {\r\n        this.theme = val\r\n      },\r\n      immediate: true\r\n    },\r\n    async theme(val) {\r\n      await this.setTheme(val)\r\n    }\r\n  },\r\n  created() {\r\n    if(this.defaultTheme !== ORIGINAL_THEME) {\r\n      this.setTheme(this.defaultTheme)\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    async setTheme(val) {\r\n      const oldVal = this.chalk ? this.theme : ORIGINAL_THEME\r\n      if (typeof val !== 'string') return\r\n      const themeCluster = this.getThemeCluster(val.replace('#', ''))\r\n      const originalCluster = this.getThemeCluster(oldVal.replace('#', ''))\r\n\r\n      const getHandler = (variable, id) => {\r\n        return () => {\r\n          const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\r\n          const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster)\r\n\r\n          let styleTag = document.getElementById(id)\r\n          if (!styleTag) {\r\n            styleTag = document.createElement('style')\r\n            styleTag.setAttribute('id', id)\r\n            document.head.appendChild(styleTag)\r\n          }\r\n          styleTag.innerText = newStyle\r\n        }\r\n      }\r\n\r\n      if (!this.chalk) {\r\n        const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`\r\n        await this.getCSSString(url, 'chalk')\r\n      }\r\n\r\n      const chalkHandler = getHandler('chalk', 'chalk-style')\r\n\r\n      chalkHandler()\r\n\r\n      const styles = [].slice.call(document.querySelectorAll('style'))\r\n        .filter(style => {\r\n          const text = style.innerText\r\n          return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\r\n        })\r\n      styles.forEach(style => {\r\n        const { innerText } = style\r\n        if (typeof innerText !== 'string') return\r\n        style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\r\n      })\r\n\r\n      this.$emit('change', val)\r\n    },\r\n\r\n    updateStyle(style, oldCluster, newCluster) {\r\n      let newStyle = style\r\n      oldCluster.forEach((color, index) => {\r\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\r\n      })\r\n      return newStyle\r\n    },\r\n\r\n    getCSSString(url, variable) {\r\n      return new Promise(resolve => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = () => {\r\n          if (xhr.readyState === 4 && xhr.status === 200) {\r\n            this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\r\n            resolve()\r\n          }\r\n        }\r\n        xhr.open('GET', url)\r\n        xhr.send()\r\n      })\r\n    },\r\n\r\n    getThemeCluster(theme) {\r\n      const tintColor = (color, tint) => {\r\n        let red = parseInt(color.slice(0, 2), 16)\r\n        let green = parseInt(color.slice(2, 4), 16)\r\n        let blue = parseInt(color.slice(4, 6), 16)\r\n\r\n        if (tint === 0) { // when primary color is in its rgb space\r\n          return [red, green, blue].join(',')\r\n        } else {\r\n          red += Math.round(tint * (255 - red))\r\n          green += Math.round(tint * (255 - green))\r\n          blue += Math.round(tint * (255 - blue))\r\n\r\n          red = red.toString(16)\r\n          green = green.toString(16)\r\n          blue = blue.toString(16)\r\n\r\n          return `#${red}${green}${blue}`\r\n        }\r\n      }\r\n\r\n      const shadeColor = (color, shade) => {\r\n        let red = parseInt(color.slice(0, 2), 16)\r\n        let green = parseInt(color.slice(2, 4), 16)\r\n        let blue = parseInt(color.slice(4, 6), 16)\r\n\r\n        red = Math.round((1 - shade) * red)\r\n        green = Math.round((1 - shade) * green)\r\n        blue = Math.round((1 - shade) * blue)\r\n\r\n        red = red.toString(16)\r\n        green = green.toString(16)\r\n        blue = blue.toString(16)\r\n\r\n        return `#${red}${green}${blue}`\r\n      }\r\n\r\n      const clusters = [theme]\r\n      for (let i = 0; i <= 9; i++) {\r\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\r\n      }\r\n      clusters.push(shadeColor(theme, 0.1))\r\n      return clusters\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.theme-message,\r\n.theme-picker-dropdown {\r\n  z-index: 99999 !important;\r\n}\r\n\r\n.theme-picker .el-color-picker__trigger {\r\n  height: 26px !important;\r\n  width: 26px !important;\r\n  padding: 2px;\r\n}\r\n\r\n.theme-picker-dropdown .el-color-dropdown__link-btn {\r\n  display: none;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/ThemePicker"}]}